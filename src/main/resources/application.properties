# Logging configuration
logging.level.root=WARN
logging.level.com.phantomquery=INFO
logging.level.com.phantomquery.controller=INFO
logging.level.com.phantomquery.service=INFO
logging.level.com.google.cloud=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.messaging=WARN
logging.pattern.console=%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server configuration
server.port=8080

# WebSocket Configuration
spring.websocket.max-text-message-size=8192
spring.websocket.max-binary-message-size=8192

# CORS Configuration
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*

# Multipart file upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# OpenAI configuration
openai.api.key=${OPENAI_API_KEY}

# Google Cloud configuration
# Make sure to set GOOGLE_APPLICATION_CREDENTIALS environment variable to point to your service account key file
# Example: GOOGLE_APPLICATION_CREDENTIALS=C:/path/to/your/service-account-key.json

# H2 Database Configuration
spring.datasource.url=jdbc:h2:file:./data/chatdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Google Cloud Speech-to-Text Configuration
spring.cloud.gcp.credentials.location=classpath:google-credentials.json 